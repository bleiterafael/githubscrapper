// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RBL.GitHub.Scrapper.Data.EF.Context;

namespace RBL.GitHub.Scrapper.Data.EF.Migrations
{
    [DbContext(typeof(ScrapperContext))]
    partial class ScrapperContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("RBL.GitHub.Scrapper.Domain.ScrappingInfo", b =>
                {
                    b.Property<int>("ScrappingInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GitHubRepository")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalFiles")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalLines")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalSize")
                        .HasColumnType("TEXT");

                    b.Property<string>("TotalSizeDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("ScrappingInfoId");

                    b.ToTable("ScrappingInfos");
                });

            modelBuilder.Entity("RBL.GitHub.Scrapper.Domain.ScrappingInfoExtension", b =>
                {
                    b.Property<int>("ScrappingInfoExtensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Extension")
                        .HasColumnType("TEXT");

                    b.Property<int>("ScrappingInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalFiles")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalLines")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalSize")
                        .HasColumnType("TEXT");

                    b.HasKey("ScrappingInfoExtensionId");

                    b.HasIndex("ScrappingInfoId");

                    b.ToTable("ScrappingInfoExtension");
                });

            modelBuilder.Entity("RBL.GitHub.Scrapper.Domain.ScrappingInfoExtension", b =>
                {
                    b.HasOne("RBL.GitHub.Scrapper.Domain.ScrappingInfo", "ScrappingInfo")
                        .WithMany("ScrappingInfoExtensions")
                        .HasForeignKey("ScrappingInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
